[tool.poetry]
name = "fasterrunner"
version = "3.0.0"
description = ""
authors = ["lihuacai <lihuacai168@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
aiocontextvars = "0.2.2"
amqp = "^5.2.0"
beautifulsoup4 = "4.6.3"
celery = ">=5.2.7,<5.3.0"
certifi = "2019.9.11"
chardet = "3.0.4"
colorama = "0.4.1"
colorlog = "4.0.2"
contextvars = "2.4"
coreapi = "2.3.3"
coreschema = "0.0.4"
dingtalkchatbot = "1.3.0"
django = "4.1.13"
django-celery-beat = "^2.5.0"
django-cors-headers = "4.3.1"
django-jsonfield = "1.4.0"
django-model-utils = "4.0.0"
django-rest-swagger = "2.2.0"
django-simpleui = "2023.12.12"
django-utils-six = "2.0"
djangorestframework = "3.14.0"
djangorestframework-jwt = "1.11.0"
drf-yasg = "1.21.7"
packaging = "23.2"
har2case = "0.3.1"
idna = "2.8"
inflection = "0.5.0"
jinja2 = "2.10.3"
loguru = "0.5.1"
markupsafe = "1.1.1"
openapi-codec = "1.3.2"
pyjwt = "1.7.1"
pyparsing = "2.4.7"
python-dotenv = "0.10.3"
pytz = "2022.2.1"
pyyaml = ">=5.3.1,<5.4.0"
requests = "2.22.0"
requests-toolbelt = "0.9.1"
simplejson = "3.17.0"
six = "1.15.0"
sqlparse = "0.3.1"
tornado = "6.4"
uritemplate = "3.0.1"
urllib3 = "1.25.7"
django-mysql = "^4.12.0"
json5 = "0.9.5"
django-bulk-update = "2.2.0"
xmltodict = ">=0.12.0,<0.13.0"
genson = ">=1.2.2,<1.3.0"
faker = ">=7.0.1,<7.1.0"
curlify = ">=2.2.1,<2.3.0"
pydash = ">=5.0.1,<5.1.0"
jsonpath = ">=0.82,<1.0"
pydantic = "1.9.0"
gunicorn = "^21.2.0"
sentry-sdk = ">=1.5.8,<1.6.0"
croniter = ">=1.3.5,<1.4.0"
django-log-request-id = ">=2.0.0,<2.1.0"
gevent = "22.10.2"
django-filter = ">=2.4.0,<2.5.0"
django-auth-ldap = "2.3.0"
pymysql = "1.1.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.2.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[project]
# Support Python 3.11+.
requires-python = ">=3.11"

[tool.ruff]
# Set the maximum line length to 79.
line-length = 120
exclude = ["web/*", "**/migrations/**"]

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
extend-select = ["E501"]
select = [
    # isort
    "I",
    # pyupgrade
    # "UP",
]

[tool.ruff.lint.pydocstyle]
convention = "google"