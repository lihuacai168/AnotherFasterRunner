version: '3.8'

x-env: &env
  # db
  MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  MYSQL_DATABASE: ${MYSQL_DATABASE}
  MYSQL_USER: ${MYSQL_USER}
  MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  # mq
  RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
  RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
  MQ_PORT: ${MQ_PORT}
  MQ_HOST: ${MQ_HOST:-mq}
  MQ_ADMIN_PORT: ${MQ_ADMIN_PORT}
  MQ_VHOST: ${MQ_VHOST:-/}

  # celery-worker
  SERVER_IP: ${SERVER_IP}
  DJANGO_API_PORT: ${DJANGO_API_PORT}

  # app
  EMAIL_HOST: ${EMAIL_HOST}
  EMAIL_PORT: ${EMAIL_PORT}
  EMAIL_HOST_USER: ${EMAIL_HOST_USER}
  EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
#  DJANGO_SETTINGS_MODULE：FasterRunner.settings.docker

services:
  db:
    image: mysql:8.0
    container_name: faster-mysql
    privileged: true
    environment:
      # 设置默认数据库和root默认密码,如果宿主机中/var/lib/mysql已经存在,这两个设置都不会生效
      <<: *env
    volumes:
      - ./mysql:/var/lib/mysql # 挂载宿主机的mysql数据到docker中
      - ./ComposeDeploy/db/my.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
      - ./ComposeDeploy/db:/docker-entrypoint-initdb.d/:ro
    # 端口映射,格式 宿主机端口:容器端口
    ports:
      - "3306:3306"
    restart: always
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --socket=/var/lib/mysql/mysql.sock

  app:
    image: registry-vpc.cn-hangzhou.aliyuncs.com/cbk/fasterrunner:app-latest
    container_name: faster-app
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      <<: *env
    volumes:
#      - ./mysql:/opt/workspace/FasterRunner/mysql
      - ./nginx.conf:/etc/nginx/sites-enabled/nginx.conf
    entrypoint: /bin/sh
    command: -c "/home/FR/start.sh"
    # command: -c "/usr/local/bin/python -m gunicorn FasterRunner.wsgi_docker -b 0.0.0.0 -w 4"
    depends_on:
      - db
      - mq
    ports:
      - "${DJANGO_API_PORT}:8000"
    restart: always

#  celery-worker:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    environment:
#      <<: *env
#    entrypoint: /app/start.sh
#    command: "celery-worker"
#    restart: always
#    depends_on:
#      - db
#      - mq
#
#  celery-beat:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    environment:
#      <<: *env
#    entrypoint: /app/start.sh
#    command: "celery-beat"
#    restart: always
#    depends_on:
#      - mq
#      - db
#
## django-admin & app proxy
#  nginx:
#    build: ./nginx
#    ports:
#      - "${DJANGO_ADMIN_PORT}:8000"
#    depends_on:
#      - app
#    restart: always
#    environment:
#      <<: *env
  # web:
  #   image: registry-vpc.cn-hangzhou.aliyuncs.com/cbk/fasterrunner:web-latest
  #   container_name: faster-web
  #   build:
  #     context: ./FasterWeb
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${WEB_PORT}:8888"
  #   volumes:
  #     - ./FasterWeb/dist:/usr/share/nginx/html

  mq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    environment:
      <<: *env
    restart: always
    ports:
      - "${MQ_ADMIN_PORT}:15672"
      - "${MQ_PORT}:5672"


