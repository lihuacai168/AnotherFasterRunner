server {
    listen      8000;
    server_name 127.0.0.1;
    charset     utf-8;

    keepalive_timeout      1800s;
    client_header_timeout  1800s;
    client_body_timeout    1800s;
    proxy_connect_timeout  1800s;
    proxy_read_timeout     1800s;
    proxy_send_timeout     1800s;
    send_timeout           1800s;
    uwsgi_send_timeout 	   1800s;
    uwsgi_read_timeout     1800s;

    client_max_body_size 75M;   # adjust to taste
    location /media  {
        alias /opt/workspace/FasterRunner/templates/;  # your Django project's media files - amend as required
    }

    location /static {
        alias /opt/workspace/FasterRunner/static/; # your Django project's static files - amend as required
    }

    location /api {
        include         uwsgi_params;
        # uwsgi_pass      unix:/opt/workspace/FasterRunner/FasterRunner.sock;
        uwsgi_pass      127.0.0.1:8001;
    }

    location / {
        root /opt/workspace/FasterRunner/templates/FasterWeb;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html =404;
    }

    location /xadmin {
        root /opt/workspace/FasterRunner/templates/TyAdmin;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html =404;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
    # //开启和关闭gzip模式
	gzip on;
	# //gizp压缩起点，文件大于2k才进行压缩;设置允许压缩的页面最小字节数，页面字节数从header头得content-length中进行获取。 默认值是0，不管页面多大都压缩。建议设置成大于2k的字节数，小于2k可能会越压越大。
	gzip_min_length 2k;
	# // 设置压缩所需要的缓冲区大小，以4k为单位，如果文件为7k则申请2*4k的缓冲区 
	gzip_buffers 4 16k;
	# // 设置gzip压缩针对的HTTP协议版本
	gzip_http_version 1.0;
	# // gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间
	gzip_comp_level 2;
	# //进行压缩的文件类型
	gzip_types text/plain application/javascript text/css application/xml;
	# // 是否在http header中添加Vary: Accept-Encoding，建议开启
	gzip_vary on;
}